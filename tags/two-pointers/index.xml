<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Two Pointers on MindBreaker3310</title>
    <link>https://mindbreaker3310.github.io/tags/two-pointers/</link>
    <description>Recent content in Two Pointers on MindBreaker3310</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Oct 2021 20:33:59 +0800</lastBuildDate><atom:link href="https://mindbreaker3310.github.io/tags/two-pointers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Intersection of Two Arrays II</title>
      <link>https://mindbreaker3310.github.io/posts/intersection-of-two-arrays/</link>
      <pubDate>Wed, 20 Oct 2021 20:33:59 +0800</pubDate>
      
      <guid>https://mindbreaker3310.github.io/posts/intersection-of-two-arrays/</guid>
      <description>350. Intersection of Two Arrays II  題目  給兩個陣列，找出這兩個陣列都有的數值，結果不需按照順序。
 範例  Input: nums1 = [1,2,2,1], nums2 = [2,2] Output: [2,2] Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4] Output: [4,9] Explanation: [9,4] is also accepted.  解答  public class Solution { public int[] Intersect(int[] nums1, int[] nums2) { Array.Sort(nums1); Array.Sort(nums2); List&amp;lt;int&amp;gt; ansList = new List&amp;lt;int&amp;gt;(); int p1 = 0; int p2 = 0; while (p1 &amp;lt; nums1.Length &amp;amp;&amp;amp; p2 &amp;lt; nums2.</description>
    </item>
    
    <item>
      <title>Two Sum II | Input array is sorted</title>
      <link>https://mindbreaker3310.github.io/posts/two-sum-2/</link>
      <pubDate>Wed, 20 Oct 2021 20:30:23 +0800</pubDate>
      
      <guid>https://mindbreaker3310.github.io/posts/two-sum-2/</guid>
      <description>167. Two Sum II - Input array is sorted  題目  給一個排序過的整數陣列與目標數，找出陣列中的兩個數值相加會等於目標數，並回傳這兩個數分別是第幾個數AKA index+1。
只會有一個解，且不同重複使用相同的元素
 範例  Input: numbers = [2,3,4], target = 6 Output: [1,3] Explanation: The sum of 2 and 4 is 6. Therefore index1 = 1, index2 = 3. Input: numbers = [-1,0], target = -1 Output: [1,2] Explanation: The sum of -1 and 0 is -1. Therefore index1 = 1, index2 = 2.  解答  public class Solution { public int[] TwoSum(int[] numbers, int target) { int low = 0; int high = numbers.</description>
    </item>
    
    <item>
      <title>Move Zeroes</title>
      <link>https://mindbreaker3310.github.io/posts/move-zeroes/</link>
      <pubDate>Wed, 20 Oct 2021 20:27:32 +0800</pubDate>
      
      <guid>https://mindbreaker3310.github.io/posts/move-zeroes/</guid>
      <description>283. Move Zeroes  題目  ‎給一個陣列，把所有0都丟掉最後面。
 範例  Input: nums = [0,1,0,3,12] Output: [1,3,12,0,0] Input: nums = [0] Output: [0]  解答  public class Solution { public void MoveZeroes(int[] nums) { int p = 0; for (int i = 0; i &amp;lt; nums.Length; i++) { if (nums[i] != 0) { int temp = nums[p]; nums[p] = nums[i]; nums[i] = temp; } if (nums[p] != 0) { p++; } } } }  解題思路  兩個指標i、p，i每個次都會前進一步，遍歷整個陣列。p代表0的index位置，當nums[i]是0的時候p將不會跟著增加，等nums[i]不是0的時候，與其互換。</description>
    </item>
    
    <item>
      <title>Rotate Array</title>
      <link>https://mindbreaker3310.github.io/posts/rotate-array/</link>
      <pubDate>Tue, 19 Oct 2021 20:11:06 +0800</pubDate>
      
      <guid>https://mindbreaker3310.github.io/posts/rotate-array/</guid>
      <description>189. Rotate Array  題目  ‎給一個陣列，將陣列向右旋轉k步。
 範例  Input: nums = [1,2,3,4,5,6,7], k = 3 Output: [5,6,7,1,2,3,4] Explanation: rotate 1 steps to the right: [7,1,2,3,4,5,6] rotate 2 steps to the right: [6,7,1,2,3,4,5] rotate 3 steps to the right: [5,6,7,1,2,3,4] Input: nums = [-1,-100,3,99], k = 2 Output: [3,99,-1,-100] Explanation: rotate 1 steps to the right: [99,-1,-100,3] rotate 2 steps to the right: [3,99,-1,-100]  解答  public class Solution { public void Rotate(int[] nums, int k) { if (nums.</description>
    </item>
    
    <item>
      <title>Squares of a Sorted Array</title>
      <link>https://mindbreaker3310.github.io/posts/squares-of-a-sorted-array/</link>
      <pubDate>Tue, 19 Oct 2021 20:07:04 +0800</pubDate>
      
      <guid>https://mindbreaker3310.github.io/posts/squares-of-a-sorted-array/</guid>
      <description>977. Squares of a Sorted Array  題目  給一個由排序到大的陣列，回傳每個數值都平方的排序陣列。
 範例  Input: nums = [-4,-1,0,3,10] Output: [0,1,9,16,100] Explanation: After squaring, the array becomes [16,1,0,9,100]. After sorting, it becomes [0,1,9,16,100]. Input: nums = [-7,-3,2,3,11] Output: [4,9,9,49,121]  解答  public class Solution { public int[] SortedSquares(int[] nums) { int[] ans = new int[nums.Length]; int i = 0; int j = nums.Length - 1; int p = j; while (i &amp;lt;= j) { if (Math.</description>
    </item>
    
  </channel>
</rss>
