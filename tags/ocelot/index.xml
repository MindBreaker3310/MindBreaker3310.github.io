<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ocelot on MindBreaker3310</title>
    <link>https://mindbreaker3310.github.io/tags/ocelot/</link>
    <description>Recent content in Ocelot on MindBreaker3310</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Jan 2022 13:20:59 +0800</lastBuildDate><atom:link href="https://mindbreaker3310.github.io/tags/ocelot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>APIGateway筆記</title>
      <link>https://mindbreaker3310.github.io/posts/post/20220114_apigateway%E7%AD%86%E8%A8%98.md/</link>
      <pubDate>Fri, 14 Jan 2022 13:20:59 +0800</pubDate>
      
      <guid>https://mindbreaker3310.github.io/posts/post/20220114_apigateway%E7%AD%86%E8%A8%98.md/</guid>
      <description>筆記  Api Gateway的設計有好幾種，通常來說一般只用一個Api Gw來當一個入口並不是個好主意，可以設計成SPA網頁用一個、手機App用一個、傳統網站用一個。
這邊使用的Api Gw是Ocelot
Ocelot是一個輕量化、容易擴充、開源的專案👍
 前置作業  開啟新專案 &amp;raquo; Empty .Net Project
NuGet安裝必要套件Ocelot
如果要使用快取功能的話，還要安裝Ocelot.Cache.CacheManager
 註冊與使用Ocelot服務 要使用快取功能才要加上AddCacheManager
public void ConfigureServices(IServiceCollection services) { services.AddOcelot() .AddCacheManager(settings =&amp;gt; settings.WithDictionaryHandle()); } public async void Configure(IApplicationBuilder app, IWebHostEnvironment env) { //前略...  await app.UseOcelot(); }  建立閘道路由json檔案 建立一個類似appsettings.json依照環境是Development還是Debug來覆寫的檔案
 celot.json(維持空的)  ocelot.Development.json ocelot.Local.json(本地測試)    依照命名VS會自動合併
專案的環境變數ASPNETCORE_ENVIRONMENT要設定成Local
 設定Program.cs public static IHostBuilder CreateHostBuilder(string[] args) =&amp;gt; Host.CreateDefaultBuilder(args) .ConfigureAppConfiguration((hostingContext, config) =&amp;gt; { //會依照ASPNETCORE_ENVIRONMENT來讀取不同的檔案  config.</description>
    </item>
    
  </channel>
</rss>
