<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dynamic Programming on MindBreaker3310</title>
    <link>https://mindbreaker3310.github.io/tags/dynamic-programming/</link>
    <description>Recent content in Dynamic Programming on MindBreaker3310</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Oct 2021 20:45:17 +0800</lastBuildDate><atom:link href="https://mindbreaker3310.github.io/tags/dynamic-programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pascal&#39;s Triangle</title>
      <link>https://mindbreaker3310.github.io/posts/rascals-triangle/</link>
      <pubDate>Thu, 21 Oct 2021 20:45:17 +0800</pubDate>
      
      <guid>https://mindbreaker3310.github.io/posts/rascals-triangle/</guid>
      <description>118. Pascal&amp;rsquo;s Triangle  題目  給要得行數，建立出Pascal三角形的陣列。
Pascal’s Triangle
 範例  Input: numRows = 5 Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]] Input: numRows = 1 Output: [[1]]  解答  public class Solution { public IList&amp;lt;IList&amp;lt;int&amp;gt;&amp;gt; Generate(int numRows) { //建立二維陣列  int[][] ans = new int[numRows][]; for (int i = 0; i &amp;lt; numRows; i++) { ans[i] = new int[i + 1]; } for (int n = 0; n &amp;lt; numRows; n++) { for (int i = 0; i &amp;lt; ans[n].</description>
    </item>
    
    <item>
      <title>Best Time to Buy and Sell Stock</title>
      <link>https://mindbreaker3310.github.io/posts/best-time-to-buy-and-sell-stock/</link>
      <pubDate>Wed, 20 Oct 2021 20:36:55 +0800</pubDate>
      
      <guid>https://mindbreaker3310.github.io/posts/best-time-to-buy-and-sell-stock/</guid>
      <description>121. Best Time to Buy and Sell Stock  題目  給一個陣列代表每日股票的買賣價格，找出最好的買點與賣點。
 範例  Input: prices = [7,1,5,3,6,4] Output: 5 Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5. Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell. Input: prices = [7,6,4,3,1] Output: 0 Explanation: In this case, no transactions are done and the max profit = 0.</description>
    </item>
    
  </channel>
</rss>
