<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on MindBreaker3310</title>
    <link>https://mindbreaker3310.github.io/categories/docker/</link>
    <description>Recent content in Docker on MindBreaker3310</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Dec 2021 11:33:55 +0800</lastBuildDate><atom:link href="https://mindbreaker3310.github.io/categories/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RabbitMQ筆記</title>
      <link>https://mindbreaker3310.github.io/posts/post/20211228_rabbitmq%E7%AD%86%E8%A8%98.md/</link>
      <pubDate>Tue, 28 Dec 2021 11:33:55 +0800</pubDate>
      
      <guid>https://mindbreaker3310.github.io/posts/post/20211228_rabbitmq%E7%AD%86%E8%A8%98.md/</guid>
      <description>前置作業  RabbitMQ的兔兔icon怪可愛的，可以想像成郵局，可以收信也可以送信，是一堆兔兔幫你送信~🐰
 安裝Docker 透過docker-compose來設定下載，alpine是輕量化體積較小的版本
#docker-compose.ymlabbitmq:image:rabbitmq:3-management-alpine#docker-compose.override.ymlrabbitmq:container_name:rabbitmqrestart:alwaysports:- &amp;#34;5672:5672&amp;#34;- &amp;#34;15672:15672&amp;#34;#DashBoard的portdocker up上去後，測試看看能不能連線到localhost:15672，可以就會進到登入畫面，第一次直接登入帳密都是guest。
 MassTransit🚎 集體搭車去RabbitMQ的概念(?)，這是專給.Net用的套件，讓我們更簡單的去使用RabbitMQ的功能
 建立Event製造機  建立EventBus.Messages項目專案
安裝必要套件
&amp;lt;PackageReference Include=&amp;#34;MassTransit&amp;#34; Version=&amp;#34;7.1.6&amp;#34; /&amp;gt; &amp;lt;PackageReference Include=&amp;#34;MassTransit.AspNetCore&amp;#34; Version=&amp;#34;7.1.6&amp;#34; /&amp;gt; &amp;lt;PackageReference Include=&amp;#34;MassTransit.RabbitMQ&amp;#34; Version=&amp;#34;7.1.6&amp;#34; /&amp;gt; 建立Base Event有ID與建構日期，讓其他Event去繼承它。
public class IntegrationBaseEvent { public IntegrationBaseEvent() { Id = Guid.NewGuid(); CreationDate = DateTime.UtcNow; } public IntegrationBaseEvent(Guid id, DateTime createDate) { Id = id; CreationDate = createDate; } public Guid Id { get; private set; } public DateTime CreationDate { get; private set; } } 建立結帳Event</description>
    </item>
    
    <item>
      <title>Docker容器化</title>
      <link>https://mindbreaker3310.github.io/posts/post/20211227_docker%E5%AE%B9%E5%99%A8%E5%8C%96_mssqlserver.md/</link>
      <pubDate>Mon, 27 Dec 2021 10:52:40 +0800</pubDate>
      
      <guid>https://mindbreaker3310.github.io/posts/post/20211227_docker%E5%AE%B9%E5%99%A8%E5%8C%96_mssqlserver.md/</guid>
      <description>建立Dockerfile  對專案項目按右鍵 &amp;raquo; Add &amp;raquo; Docker Support &amp;raquo; Linux &amp;raquo; 確定
該項目下面就會有Dockerfile，裡面是建立容器的指令文字檔
 建立Docker Compose  對專案項目按右鍵 &amp;raquo; Add &amp;raquo; Container Orchestrator Support(容器協調器支援) &amp;raquo; Docker Compose &amp;raquo; Linux &amp;raquo; 確定
可以將多個container合而為一，也會多一個Docker Compose 項目
#docker-compose.ymlservice:orderdb:#加入的serviceimage:mcr.microsoft.com/mssql/server:2019-latest#pull映像檔的位置#docker-compose.override.ymlservice:orderdb:container_name:orderdbenvironment:ACCEPT_EULA:&amp;#34;Y&amp;#34;SA_PASSWORD:&amp;#34;Max4129889&amp;#34;#system administrator密碼restart:alwaysports:- &amp;#34;1433:1433&amp;#34; 整合、執行映像檔  在終端機執行Docker-compose
docker-compose -f ./docker-compose.yml -f ./docker-compose.override.yml up -d 到這邊基本上就搞定了，查看一下容器有沒有好好運作~
如果出現ERROR: yaml.parser.ParserError: while parsing a block mapping之類的錯誤
很有可能是排版有誤，可以透過yml檢視器來進行查看
出現docker.errors.DockerException: Error while fetching server API version: (&#39;Connection aborted.&#39;, ConnectionRefusedError(61, &#39;Connection refused&#39;))無法連線等問題
需要先開啟Docker Desktop後再執行</description>
    </item>
    
  </channel>
</rss>
